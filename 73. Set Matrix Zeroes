class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        //approach 1: using two nested loops.
        //approach 2: using two arrays - row array and col array and flagging the row-col cell containing 0 in these arrays
        //approach 3: instead of extra space , we utilize the first row and first column as an indicator of presence of 0 in that particular row and col.
        // since [0][0] will occur twice so instead we will take one extra variable for column 0. 

        int col0 = 1 , n = matrix.size() , m = matrix[0].size();

        //step - 1 : if cell(i,j) == 0 , then mark matrix[i][0] = 0 and matrix[0][j] = 0 ; if j == 0 then we will update col0 as 0
        for(int i = 0; i< n ; i++){
            for(int j = 0; j<m;j++){
                if(matrix[i][j] == 0){
                    matrix[i][0] = 0;
                    if(j != 0) matrix[0][j] = 0;
                    else col0 = 0;
                }
            }
        }

        //step - 2 : now based on the values of first row and col from above we will update the values of matrix from 1:n-1th row and 1:m-1th col
        for(int i = 1; i < n; i++){
            for(int j = 1; j < m; j++){
                if(matrix[i][j] != 0){
                    if(matrix[i][0] == 0 || matrix[0][j] == 0){
                        matrix[i][j] = 0;
                    }
                }
            }
        }

        //step - 3 : we will now update the first row and first col
        if(matrix[0][0] == 0){
            for(int j = 0; j< m ; j++){
                matrix[0][j] = 0;
            }
        }
        if(col0 == 0){
            for(int i = 0 ; i < n ;i++){
                matrix[i][0] = 0;
            }
        }
    }
};
