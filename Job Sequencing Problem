class Solution {
public:
    // Function to find the maximum profit and the number of jobs done.
    static bool comp(Job a, Job b){
        return (a.profit > b.profit);
    }
    
    vector<int> JobScheduling(Job arr[], int n) {
        sort(arr,arr+n,comp);
        
        int maxDeadline = 0;
        for (int i = 0; i < n; i++) {
            maxDeadline = max(maxDeadline, arr[i].dead);
        }
        
        vector<bool> slot(maxDeadline + 1, false);

        int countJobs = 0;
        int maxProfit = 0; 

        for(int i = 0; i < n; i++){
            for (int j = arr[i].dead; j > 0; j--) {
                if (!slot[j]) {
                    slot[j] = true; 
                    countJobs++;
                    maxProfit += arr[i].profit;
                    break;
                }
            }
        }

        return {countJobs, maxProfit};
    }
};
