class Solution {
public:
    bool possible(vector<int>& bloomDay,int i,int m , int k){
        int boq = 0,cnt = 0;
        for(int j = 0; j < bloomDay.size();j++){
            if(bloomDay[j] <= i) cnt++;
            else{
                boq += (cnt/k);
                cnt = 0;
            }
        }
        boq += (cnt/k);
        return (boq >= m);
    }

    int minDays(vector<int>& bloomDay, int m, int k) {
        long long val = m*1ll*k*1ll;
        int n = bloomDay.size();
        if(n < val) return -1;
        int mini = INT_MAX , maxi = INT_MIN;
        for(int i = 0; i<n;i++){
            mini = min(mini,bloomDay[i]);
            maxi = max(maxi,bloomDay[i]);
        }
        int l = mini, h = maxi;
        while(l<=h){
            int mid = l + (h-l)/2;
            if(possible(bloomDay,mid,m,k)){
                h = mid -1;
            }else{
                l = mid +1;
            }
        }
        return l;
    }
};
