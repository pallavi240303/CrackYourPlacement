class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        /*using the tortoise and hare algorithm using the slow and fast pointer . if the slow and fast pointer meet at 
        same ppoint then it is detected to be a cycle that is the element is duplicate*/

        //approach1 = using sorting 
        //approach2 = using hashmap
        //approach3 = using sorting and then binary search on it
        //approach4 = two pointer / tortoise-hair algo
        
        int s= nums[0] , f = nums[0];
        do{
            s = nums[s];
            f = nums[nums[f]];
        }while(s!=f);
        f = nums[0];
        while(s!=f){
            s = nums[s];
            f = nums[f];
        }
        return s;
    }
};
