/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(head == nullptr) return nullptr;
        ListNode* temp = head;
        int length = 0;
        while(temp!= nullptr){
            temp = temp->next;
            length++;
        }
        if(length == n){
            ListNode* ptr = head;
            head = head->next;
            delete ptr;
            return head;
        }
        temp = head;
        for(int i = 1; i< length -n ; i++){
            temp = temp->next;
        }
        ListNode* toDelete = temp->next;
        temp->next = (temp->next)->next;
        delete toDelete;
        return head;
    }
};
